{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e7123a98bc2789977e70","webpack:///external \"angular\"","webpack:///./src/sparql-service.ts"],"names":[],"mappings":"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","file":"sparql-service.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sparql-service\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"sparql-service\"] = factory(root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e7123a98bc2789977e70","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 0\n// module chunks = 0 1","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar angular = require(\"angular\");\nvar UniqueObjectTracker = (function () {\n    function UniqueObjectTracker() {\n        this.objectsById = {};\n        this.assignmentsById = {};\n    }\n    return UniqueObjectTracker;\n}());\nexports.UniqueObjectTracker = UniqueObjectTracker;\nvar SparqlService = (function () {\n    /* @ngInject */\n    function SparqlService($http, $q) {\n        this.$http = $http;\n        this.$q = $q;\n    }\n    SparqlService.stringToSPARQLString = function (string) {\n        return '\"' + string\n            .replace(/\\\\/g, '\\\\\\\\')\n            .replace(/\"/g, '\\\\\"')\n            .replace(/\\n/g, '\\\\n')\n            .replace(/\\t/g, '\\\\t')\n            .replace(/\\r/g, '\\\\r')\n            .replace(/\\f/g, '\\\\f')\n            + '\"';\n    };\n    SparqlService.bindingsToObject = function (bindings, ret, config, tracker) {\n        if (ret === void 0) { ret = {}; }\n        for (var bkey in bindings) {\n            var okey = bkey;\n            var obj = ret;\n            var subObjectPrefixIndex = okey.indexOf('_');\n            var lastSubObjectPrefixIndex = -1;\n            var assignmentsById = void 0;\n            if (tracker)\n                assignmentsById = tracker.assignmentsById;\n            while (subObjectPrefixIndex !== -1) {\n                okey = bkey.substring(lastSubObjectPrefixIndex + 1, subObjectPrefixIndex);\n                var sbkey = bkey.substring(0, subObjectPrefixIndex);\n                if (config && config.bindingTypes && config.bindingTypes[sbkey] && config.bindingTypes[sbkey] === 'uniqueArray') {\n                    if (!obj[okey])\n                        obj[okey] = [];\n                    if (!tracker.objectsById[sbkey])\n                        tracker.objectsById[sbkey] = {};\n                    var tmp = void 0;\n                    if (!tracker.objectsById[sbkey][bindings[sbkey].value]) {\n                        tmp = config.bindingConverters[sbkey](bindings[sbkey], bindings);\n                        tracker.objectsById[sbkey][bindings[sbkey].value] = tmp;\n                    }\n                    else\n                        tmp = tracker.objectsById[sbkey][bindings[sbkey].value];\n                    if (!assignmentsById[sbkey])\n                        assignmentsById[sbkey] = {};\n                    if (!assignmentsById[sbkey][bindings[sbkey].value]) {\n                        obj[sbkey].push(tmp);\n                        assignmentsById[sbkey][bindings[sbkey].value] = {};\n                    }\n                    assignmentsById = assignmentsById[sbkey][bindings[sbkey].value];\n                    obj = tmp;\n                }\n                else {\n                    if (config && config.bindingTypes && config.bindingTypes[sbkey] && config.bindingTypes[sbkey] === 'single') {\n                        if (!tracker.objectsById[sbkey])\n                            tracker.objectsById[sbkey] = {};\n                        if (!tracker.objectsById[sbkey][bindings[sbkey].value]) {\n                            obj[okey] = config.bindingConverters[sbkey](bindings[sbkey], bindings);\n                            tracker.objectsById[sbkey][bindings[sbkey].value] = obj[okey];\n                        }\n                    }\n                    else if (!obj[okey])\n                        obj[okey] = config.bindingConverters[sbkey](bindings[sbkey], bindings);\n                    obj = obj[okey];\n                }\n                lastSubObjectPrefixIndex = subObjectPrefixIndex;\n                subObjectPrefixIndex = bkey.indexOf('_', subObjectPrefixIndex + 1);\n            }\n            okey = bkey.substring(lastSubObjectPrefixIndex + 1);\n            var val = void 0;\n            if (tracker && config && config.bindingTypes && (config.bindingTypes[bkey] === 'single' || config.bindingTypes[bkey] === 'uniqueArray')) {\n                if (!tracker.objectsById[bkey])\n                    tracker.objectsById[bkey] = {};\n                if (!tracker.objectsById[bkey][bindings[bkey].value]) {\n                    if (config && config.bindingConverters && config.bindingConverters[bkey])\n                        val = config.bindingConverters[bkey](bindings[bkey], bindings);\n                    else\n                        val = SparqlService.bindingToValue(bindings[bkey]);\n                    tracker.objectsById[bkey][bindings[bkey].value] = val;\n                }\n                else\n                    val = tracker.objectsById[bkey][bindings[bkey].value];\n            }\n            else if (config && config.bindingConverters && config.bindingConverters[bkey])\n                val = config.bindingConverters[bkey](bindings[bkey], bindings);\n            else if (!config || !config.bindingTypes || !config.bindingTypes[bkey] || (config.bindingTypes[bkey] !== 'hash' && config.bindingTypes[bkey] !== 'ignore'))\n                val = SparqlService.bindingToValue(bindings[bkey]);\n            if (config && config.bindingTypes && config.bindingTypes[bkey]) {\n                switch (config.bindingTypes[bkey]) {\n                    case 'ignore': break;\n                    case 'single':\n                        obj[okey] = val;\n                        break;\n                    case 'array':\n                        if (!Array.isArray(obj[okey]))\n                            obj[okey] = [];\n                        obj[okey].push(val);\n                        break;\n                    case 'hash':\n                        if (!obj[okey])\n                            obj[okey] = {};\n                        if (val)\n                            obj[okey][bindings[bkey].value] = val;\n                        else if (bindings[bkey].type === 'literal') {\n                            var key2 = bindings[bkey].datatype;\n                            if (!key2) {\n                                key2 = bindings[bkey]['xml:lang'];\n                                if (!key2)\n                                    key2 = '';\n                            }\n                            obj[okey][key2] = bindings[bkey].value;\n                        }\n                        else\n                            obj[okey][bindings[bkey].value] = bindings[bkey].value;\n                        break;\n                    default:\n                        if (!obj[okey])\n                            obj[okey] = [];\n                        if (!assignmentsById[bkey])\n                            assignmentsById[bkey] = {};\n                        if (!assignmentsById[bkey][bindings[bkey].value]) {\n                            assignmentsById[bkey][bindings[bkey].value] = val;\n                            obj[okey].push(val);\n                        }\n                }\n            }\n            else if (Array.isArray(obj[okey]))\n                obj[okey].push(val);\n            else if (obj[okey] !== null && typeof (obj[okey]) === 'object' && bindings[bkey]) {\n                if (bindings[bkey].type === 'literal') {\n                    var key2 = bindings[bkey].datatype;\n                    if (!key2) {\n                        key2 = bindings[bkey]['xml:lang'];\n                        if (!key2)\n                            key2 = '';\n                    }\n                    if (config && config.bindingConverters && config.bindingConverters[bkey])\n                        obj[okey][key2] = config.bindingConverters[bkey](bindings[bkey], bindings);\n                    else\n                        obj[okey][key2] = bindings[bkey].value;\n                }\n                else if (config && config.bindingConverters && config.bindingConverters[bkey])\n                    obj[okey][bindings[bkey].value] = config.bindingConverters[bkey](bindings[bkey], bindings);\n                else\n                    obj[okey][bindings[bkey].value] = bindings[bkey].value;\n            }\n            else\n                obj[okey] = val;\n        }\n        return ret;\n    };\n    SparqlService.bindingToValue = function (binding) {\n        if (!binding)\n            return undefined;\n        if (binding.type === 'uri')\n            return binding.value;\n        else if (binding.type === 'bnode')\n            return binding.value;\n        else if (binding.datatype)\n            switch (binding.datatype) {\n                case 'http://www.w3.org/2001/XMLSchema#integer':\n                case 'http://www.w3.org/2001/XMLSchema#decimal': return parseInt(binding.value, 10);\n                case 'http://www.w3.org/2001/XMLSchema#float':\n                case 'http://www.w3.org/2001/XMLSchema#double': return parseFloat(binding.value);\n                case 'http://www.w3.org/2001/XMLSchema#boolean': return binding.value ? true : false;\n                default:\n            }\n        return binding.value;\n    };\n    SparqlService.bindingToString = function (binding) {\n        if (!binding)\n            return 'UNDEF';\n        else {\n            var value = binding.value.replace(/\\\\/g, '\\\\\\\\').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\b]/g, '\\\\b').replace(/\\f/g, '\\\\f').replace(/\\\"/g, '\\\\\"').replace(/\\'/g, '\\\\\\'');\n            if (binding.type === 'uri')\n                return '<' + value + '>';\n            else if (binding.type === 'bnode')\n                return '_:' + value;\n            else if (binding.datatype)\n                switch (binding.datatype) {\n                    case 'http://www.w3.org/2001/XMLSchema#integer':\n                    case 'http://www.w3.org/2001/XMLSchema#decimal':\n                    case 'http://www.w3.org/2001/XMLSchema#double':\n                    case 'http://www.w3.org/2001/XMLSchema#boolean': return value;\n                    case 'http://www.w3.org/2001/XMLSchema#string': return '\"' + value + '\"';\n                    default: return '\"' + value + '\"^^<' + binding.datatype + '>';\n                }\n            else if (binding['xml:lang'])\n                return '\"' + value + '\"@' + binding['xml:lang'];\n            else\n                return '\"' + value + '\"';\n        }\n    };\n    SparqlService.prototype.check = function (endpoint, params) {\n        var deferred = this.$q.defer();\n        this.$http(angular.extend({\n            method: 'GET',\n            url: endpoint,\n            params: { query: 'ASK {}' },\n            headers: { 'Accept': 'application/sparql-results+json' }\n        }, params)).then(function (response) { return deferred.resolve(response.data.boolean === true); }, function (response) { return deferred.resolve(false); });\n        return deferred.promise;\n    };\n    SparqlService.prototype.checkUpdate = function (endpoint, params) {\n        var deferred = this.$q.defer();\n        this.$http(angular.extend({\n            method: 'POST',\n            url: endpoint,\n            headers: { 'Content-Type': 'application/sparql-update' },\n            data: 'INSERT DATA {}'\n        }, params)).then(function (response) { return deferred.resolve(response.status === 204); }, function (response) { return deferred.resolve(false); });\n        return deferred.promise;\n    };\n    SparqlService.prototype.checkRest = function (endpoint, params) {\n        var deferred = this.$q.defer();\n        this.$http(angular.extend({\n            method: 'POST',\n            url: endpoint + '?default',\n            data: '',\n            headers: { 'Content-Type': 'text/turtle' }\n        }, params)).then(function (response) { return deferred.resolve(response.status === 204); }, function (response) { return deferred.resolve(false); });\n        return deferred.promise;\n    };\n    SparqlService.prototype.get = function (endpoint, graphIRI, params) {\n        return this.$http(angular.extend({\n            method: 'GET',\n            url: endpoint,\n            params: graphIRI ? { graph: graphIRI } : { 'default': '' },\n            headers: { 'Accept': 'text/turtle' }\n        }, params));\n    };\n    SparqlService.prototype.post = function (endpoint, graph, graphIRI, params) {\n        return this.$http(angular.extend({\n            method: 'POST',\n            url: endpoint,\n            params: graphIRI ? { graph: graphIRI } : { 'default': '' },\n            data: graph,\n            headers: { 'Content-Type': 'text/turtle' }\n        }, params));\n    };\n    SparqlService.prototype.put = function (endpoint, graph, graphIRI, params) {\n        return this.$http(angular.extend({\n            method: 'PUT',\n            url: endpoint,\n            params: graphIRI ? { graph: graphIRI } : { 'default': '' },\n            data: graph,\n            headers: { 'Content-Type': 'text/turtle' }\n        }, params));\n    };\n    SparqlService.prototype.delete = function (endpoint, graphIRI, params) {\n        return this.$http(angular.extend({\n            method: 'DELETE',\n            url: endpoint,\n            params: graphIRI ? { graph: graphIRI } : { 'default': '' }\n        }, params));\n    };\n    SparqlService.prototype.query = function (endpoint, query, params) {\n        if (query.length <= 2048)\n            return this.$http(angular.extend({\n                method: 'GET',\n                url: endpoint,\n                params: { query: query },\n                headers: { 'Accept': 'application/sparql-results+json' }\n            }, params));\n        else\n            return this.$http(angular.extend({\n                method: 'POST',\n                url: endpoint,\n                data: 'query=' + encodeURIComponent(query),\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    'Accept': 'application/sparql-results+json'\n                }\n            }, params));\n    };\n    SparqlService.prototype.construct = function (endpoint, query, params) {\n        if (query.length <= 2048)\n            return this.$http(angular.extend({\n                method: 'GET',\n                url: endpoint,\n                params: { query: query },\n                headers: { 'Accept': 'text/turtle' }\n            }, params));\n        else\n            return this.$http(angular.extend({\n                method: 'POST',\n                url: endpoint,\n                data: query,\n                headers: {\n                    'Content-Type': 'application/sparql-query',\n                    'Accept': 'text/turtle'\n                }\n            }, params));\n    };\n    SparqlService.prototype.update = function (endpoint, query, params) {\n        return this.$http(angular.extend({\n            method: 'POST',\n            url: endpoint,\n            headers: { 'Content-Type': 'application/sparql-update' },\n            data: query\n        }, params));\n    };\n    return SparqlService;\n}());\nexports.SparqlService = SparqlService;\nangular.module('fi.seco.sparql', []).service('sparqlService', SparqlService);\n\n\n\n// WEBPACK FOOTER //\n// ./src/sparql-service.ts"],"sourceRoot":""}